name: CI

on:
  push:
    branches: ["main", "develop"]
  pull_request:
    branches: ["main", "develop"]

permissions:
  contents: read
  id-token: write
  pull-requests: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('app/pyproject.toml') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e './app[dev]'

      - name: Run Ruff
        run: ruff check app/src

      - name: Run MyPy
        run: mypy app/src

      - name: Run Tests
        run: pytest app/tests --cov=chatbot_service --cov-report=xml

      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  iac-static-analysis:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform fmt
        working-directory: infra/envs/dev
        run: terraform fmt -check -recursive

      - name: Terraform validate
        working-directory: infra/envs/dev
        run: |
          terraform init -backend=false
          terraform validate

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: infra
          quiet: true

      - name: Setup OPA
        uses: open-policy-agent/setup-opa@v2

      - name: Run OPA Policies
        run: opa test policies/opa

  terraform-plan:
    runs-on: ubuntu-latest
    needs: iac-static-analysis
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.TERRAFORM_SA }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform Init
        working-directory: infra/envs/dev
        run: terraform init -input=false

      - name: Terraform Plan
        id: plan
        working-directory: infra/envs/dev
        run: terraform plan -input=false -out=tfplan

      - name: Upload plan artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: infra/envs/dev/tfplan
